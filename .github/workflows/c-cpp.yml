name: C/C++ CI

on:
  push:
    branches: [ "oculus-go-kernel-master" ]
  pull_request:
    branches: [ "oculus-go-kernel-master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: configure
      run: ./configure
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make distcheck
      run: make distcheck

            - name: Cache
  uses: actions/cache@v4.0.2
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
    restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    upload-chunk-size: # optional
    # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
    enableCrossOsArchive: # optional, default is false
    # Fail the workflow if cache entry is not found
    fail-on-cache-miss: # optional, default is false
    # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
    lookup-only: # optional, default is false
    # Run the post step to save the cache even if another step before fails
    save-always: # optional, default is false

            - name: Download a Build Artifact
  uses: actions/download-artifact@v4.1.7
  with:
    # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
    name: # optional
    # Destination path. Supports basic tilde expansion. Defaults to $GITHUB_WORKSPACE
    path: # optional
    # A glob pattern matching the artifacts that should be downloaded. Ignored if name is specified.
    pattern: # optional
    # When multiple artifacts are matched, this changes the behavior of the destination directories. If true, the downloaded artifacts will be in the same directory specified by path. If false, the downloaded artifacts will be extracted into individual named directories within the specified path.
    merge-multiple: # optional, default is false
    # The GitHub token used to authenticate with the GitHub API. This is required when downloading artifacts from a different repository or from a different workflow run. If this is not specified, the action will attempt to download artifacts from the current repository and the current workflow run.
    github-token: # optional
    # The repository owner and the repository name joined together by "/". If github-token is specified, this is the repository that artifacts will be downloaded from.
    repository: # optional, default is ${{ github.repository }}
    # The id of the workflow run where the desired download artifact was uploaded from. If github-token is specified, this is the run that artifacts will be downloaded from.
    run-id: # optional, default is ${{ github.run_id }}
          
                - name: C/C++ Linter
  # You may pin to the exact commit or the version.
  # uses: cpp-linter/cpp-linter-action@065b5bae743b75e4225bafdc56bea4a55d432758
  uses: cpp-linter/cpp-linter-action@v2.11.0
  with:
    # The style rules to use.

- Set this to `file` to have clang-format use the closest relative .clang-format file.
- Set this to a blank string (`''`) to disable the use of clang-format entirely.
- Any code style supported by the specified version of clang-format.

    style: # optional, default is llvm
    # The file extensions to run the action against. This is a comma-separated string.
    extensions: # optional, default is c,h,C,H,cpp,hpp,cc,hh,c++,h++,cxx,hxx
    # Comma-separated list of globs with optional `-` prefix.
Globs are processed in order of appearance in the list.
Globs without `-` prefix add checks with matching names to the set,
globs with the `-` prefix remove checks with matching names from the set of enabled checks.
This option's value is appended to the value of the 'Checks' option in a .clang-tidy file (if any).

- It is possible to disable clang-tidy entirely by setting this option to `'-*'`.
- It is also possible to rely solely on a .clang-tidy config file by specifying this option as a blank string (`''`).

    tidy-checks: # optional, default is boost-*,bugprone-*,performance-*,readability-*,portability-*,modernize-*,clang-analyzer-*,cppcoreguidelines-*
    # The relative path to the repository root directory. This path is relative to the path designated as the runner's `GITHUB_WORKSPACE` environment variable.

    repo-root: # optional, default is .
    # The desired version of the [clang-tools](https://github.com/cpp-linter/clang-tools-pip) to use.
Accepted options are strings which can be 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8 or 7.

- Set this option to a blank string (`''`) to use the platform's default installed version.
- This value can also be a path to where the clang tools are installed (if using a custom install location).

    version: # optional, default is 12
    # This controls the action's verbosity in the workflow's logs.
Supported options are `info` or `debug`.
This option does not affect the verbosity of resulting thread comments or file annotations.

The verbosity can also be engaged by enabling debug logs when
[re-running jobs or workflows](https://docs.github.com/en/actions/managing-workflow-runs/re-running-workflows-and-jobs).

    verbosity: # optional, default is info
    # This controls what part of the files are analyzed. The following values are accepted:

- `false`: All lines in a file are analyzed.
- `true`: Only lines in the diff that contain additions are analyzed.
- `diff`: All lines in the diff are analyzed (including unchanged lines but not subtractions).

!!! info "Important"
    This feature requires special permissions to perform successfully.
    See our [documented permissions](permissions.md)

    lines-changed-only: # optional
    # Set this option to false to analyze any source files in the repo.
This is automatically enabled if [`lines-changed-only`](#lines-changed-only) is enabled.

!!! info "Important"
    This feature requires special permissions to perform successfully.
    See our [documented permissions](permissions.md)

    files-changed-only: # optional, default is true
    # Set this option with string of path(s) to ignore.

- In the case of multiple paths, you can use a pipe character (`|`)
  to separate the multiple paths. Multiple lines are forbidden as an input to this option;
  it must be a single string.
- This can also have files, but the file's relative path has to be specified
  as well.
- There is no need to use `./` for each entry; a blank string (`''`) represents
  the [`repo-root`](#repo-root) path.
- Submodules are automatically ignored. Hidden directories (beginning with a `.`) are also ignored
  automatically.
- Prefix a path with a bang (`!`) to make it explicitly _not_ ignored. The order of
  multiple paths does _not_ take precedence. The `!` prefix can be applied to
  a submodule's path (if desired) but not hidden directories.
- Glob patterns are not supported here. All asterisk characters (`*`) are literal.

    ignore: # optional, default is .github
    # This controls the behavior of posted thread comments as feedback. The following options are supported:

- `true`: enable the use of thread comments. This will always delete an outdated thread comment and post a new comment (triggering a notification for every comment).
- `update`: update an existing thread comment if one already exists. This option does not trigger a new notification for every thread comment update.
- `false`: disable the use of thread comments.

!!! info "Important"
    This feature requires special permissions to perform successfully.
    See our [documented permissions](permissions.md)

> [!NOTE]
> If run on a private repository, then this feature is disabled because the GitHub REST API behaves differently for thread comments on a private repository.

    thread-comments: # optional, default is false
    # Set this option to true or false to enable or disable the use of a
thread comment or pull request review that basically says 'Looks Good To Me' (when all checks pass).
The default value, `true` means no LGTM comment posted.

See [`thread-comments`](#thread-comments), [`tidy-review`](#tidy-review),
and [`format-review`](#format-review) options for further details.

    no-lgtm: # optional, default is true
    # Set this option to true to append content as part of workflow's job summary.

See implementation details in GitHub's documentation about
[Adding a job summary](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary).
This option is independent of the [`thread-comments`](#thread-comments) option,
rather this option uses the same content that the
[`thread-comments`](#thread-comments) option would use.

> [!NOTE]
> The [`no-lgtm`](#no-lgtm) option is _not_ applied to step summaries.

    step-summary: # optional
    # Set this option to false to disable the use of file annotations as feedback.

    file-annotations: # optional, default is true
    # The directory containing compilation database (like compile_commands.json) file.
    database: # optional, default is 
    # A string of extra arguments passed to clang-tidy for use as compiler arguments.
Multiple arguments are separated by spaces so the argument name and value should
use an `=` sign instead of a space.

!!! example

    ``` yaml
    extra-args: '-std=c++17 -Wall'
    ```
    This will be passed to clang-tidy as multiple `--extra-arg` options:
    ```
    clang-tidy --extra-arg=-std=c++17 --extra-arg=-Wall
    ```

    extra-args: # optional, default is 
    # Set this option to `true` to enable Pull Request reviews from clang-tidy.

!!! info "Important"
    This feature requires special permissions to perform successfully.
    See our [documented permissions](permissions.md).

    See also [the PR review feature caveats](pr-review-caveats.md).

> [!NOTE]
> The [`no-lgtm`](#no-lgtm) option is applicable to Pull Request reviews.

    tidy-review: # optional
    # Set this option to `true` to enable Pull Request reviews from clang-format.

!!! info "Important"
    This feature requires special permissions to perform successfully.
    See our [documented permissions](permissions.md).

    See also [the PR review feature caveats](pr-review-caveats.md).

> [!NOTE]
> The [`no-lgtm`](#no-lgtm) option is applicable to Pull Request reviews.

    format-review: # optional
    # The number of jobs to run in parallel.
If less than or equal to 0, the number of jobs is set to
use the number of all available CPU cores.

    jobs: # optional, default is 0

                
            - name: Setup C/C++ Compiler
  # You may pin to the exact commit or the version.
  # uses: rlalik/setup-cpp-compiler@f39db50a7fd04bfd65ce41e8fec0ac185ae59dfb
  uses: rlalik/setup-cpp-compiler@v1.2
  with:
    # Compiler to install
    compiler: # optional, default is gcc-latest
          
